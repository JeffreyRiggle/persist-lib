!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t,this.value=n,this.children=[],this.properties=new Map}return r(e,[{key:"load",value:function(e){var t=this;e.childNodes.forEach(function(e,n,r){1===e.nodeType&&t._loadChild(e),3===e.nodeType&&(t.value=e.textContent)}),this._loadAttributes(e)}},{key:"_loadChild",value:function(t){var n=new e(t.nodeName);n.load(t),this.children.push(n)}},{key:"_loadAttributes",value:function(e){for(var t=0;t<e.attributes.length;t++){var n=e.attributes[t];this.properties.set(n.name,n.value)}}}]),e}();t.default=o},function(e,t,n){"use strict";var r=n(2),o=n(0);e.exports={load:r.load,ConfigurationObject:o.ConfigurationObject}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.load=void 0;var r,o=n(0),i=(r=o)&&r.__esModule?r:{default:r};t.load=function(e,t){if(t.toLowerCase().includes("json"))return n=e,void JSON.parse(n);var n;if(t.toLowerCase().includes("xml"))return function(e){var t=(new DOMParser).parseFromString(e,"text/xml"),n=new i.default(t.documentElement.tagName);return t.documentElement.childNodes.forEach(function(e,t,r){var o=new i.default(e.tagName);o.load(e),n.children.push(o)}),n}(e);throw"Invalid data type"}}])});